{"version":3,"sources":["assets\\Texture\\Slot_TaiJiXiongMao\\js\\TaijiPandaNetwork.js"],"names":["cc","Class","Component","properties","onLoad","mainObj","node","getComponent","playerInfo","require","getInstant","audio","start","url","Lhjconfig","Server_IP","socket","io","connect","addEvent","on","console","log","playerId","emit","JSON","stringify","userid","gametype","sign","gameSign","data","changeResultJSON_Function","window","TaijiPanda_LOBBYNET","disconnect","ResultCode","lotteryRes","parse","ResultData","roll","viewarray","nHandCards","status","setTypeResult","freeCount","freeTimes","closeShine","startFreeGame","ret","sys","isNative","onDestroy"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    onLoad() {\r\n        this.mainObj = this.node.getComponent('TaijiPandaMain');\r\n        this.playerInfo = require(\"PlayerInfo\").getInstant;\r\n        this.audio = this.node.getComponent('TaijiPandaAudio');\r\n\r\n    },\r\n\r\n    start() {\r\n        this.url = Lhjconfig.Server_IP + ':15050';\r\n        this.socket = io.connect(this.url);\r\n        this.addEvent();\r\n    },\r\n\r\n\r\n    addEvent() {\r\n        this.socket.on('connected', () => {\r\n            console.log(\"LoginGame : \",this.playerInfo.playerId);\r\n            this.socket.emit('LoginGame', JSON.stringify({\r\n                userid: this.playerInfo.playerId,\r\n                gametype: null,\r\n                sign: this.playerInfo.gameSign\r\n            }));\r\n        });\r\n\r\n        this.socket.on('loginGameResult', data => {\r\n            data = this.changeResultJSON_Function(data);\r\n            console.log('LoginGameResult:', data);\r\n            window.TaijiPanda_LOBBYNET.disconnect();\r\n            this.socket.emit('LoginfreeCount');\r\n        });\r\n\r\n        this.socket.on('lotteryResult', data => {\r\n            data = this.changeResultJSON_Function(data);\r\n            console.log('lotteryResult:', data);\r\n            if (!!data.ResultCode && data.ResultCode == 1) {\r\n                this.mainObj.lotteryRes = JSON.parse(JSON.stringify(data.ResultData));\r\n                this.mainObj.roll(data.ResultData.viewarray.nHandCards);\r\n            } else {\r\n                this.mainObj.status = 0;\r\n            }\r\n        });\r\n        this.socket.on('freeTimeTypeResult', data => {\r\n            data = this.changeResultJSON_Function(data);\r\n            console.log('freeTimeTypeResult:', data);\r\n            if (data.ResultCode >= 0) {\r\n                this.mainObj.setTypeResult(data.ResultData);\r\n            }\r\n        });\r\n        this.socket.on('LoginRoomResult', data => {\r\n            data = this.changeResultJSON_Function(data);\r\n            console.log('LoginRoomResult', data);\r\n            // self.canvas.onFreeTime(data.ResultData.freeCount);                    //调用刷新免费次数的方法 \r\n        });\r\n        this.socket.on('LoginfreeCountResult', data => {\r\n            data = this.changeResultJSON_Function(data);\r\n            console.log('LoginfreeCountResult:', data);\r\n            if (data.ResultCode == 1 && data.freeCount > 0) {\r\n                this.mainObj.freeTimes = data.freeCount - 1;\r\n                this.mainObj.closeShine();\r\n                this.mainObj.startFreeGame();\r\n            }\r\n        });\r\n    },\r\n\r\n    changeResultJSON_Function(ret) {\r\n        if (cc.sys.isNative) {\r\n            return JSON.parse(ret);\r\n        }\r\n        return ret;\r\n    },\r\n\r\n    onDestroy() {\r\n        this.socket.emit('cleanLineOut');\r\n    }\r\n});"]}