{"version":3,"sources":["assets\\LaoHuJi\\module\\stateMachine\\stateMachine.js"],"names":["cc","Class","Component","properties","_state","_receiveStop","_interval","Input_Error","unscheduleAllCallbacks","SetState","Input_Start","interval","timeout","scheduleOnce","Input_Stop","unschedule","Input_Ready","showTime","state","eventCustom","Event","EventCustom","setUserData","node","dispatchEvent","GetState","update"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAE,CADA;AAERC,IAAAA,YAAY,EAAE,KAFN;AAGRC,IAAAA,SAAS,EAAE;AAHH,GAHP;AASLC,EAAAA,WAAW,EAAE,uBAAY;AACrB;AACA,QAAI,KAAKH,MAAL,KAAgB,CAApB,EAAuB;AACnB,WAAKI,sBAAL;AACA,WAAKH,YAAL,GAAoB,KAApB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACA,WAAKG,QAAL,CAAc,CAAd,EAJmB,CAIF;AACpB;AACJ,GAjBI;AAmBLC,EAAAA,WAAW,EAAE,qBAAUC,QAAV,EAAoBC,OAApB,EAA6B;AACtC;AACA,QAAI,KAAKR,MAAL,KAAgB,CAApB,EAAuB;AACnB,WAAKK,QAAL,CAAc,CAAd,EADmB,CACF;;AACjB,WAAKI,YAAL,CAAkB,YAAY;AAC1B,aAAKP,SAAL,GAAiB,IAAjB;AACH,OAFD,EAEGK,QAFH;AAIA,WAAKE,YAAL,CAAkB,KAAKN,WAAvB,EAAoCK,OAApC,EANmB,CAM0B;AAChD;AACJ,GA7BI;AA+BLE,EAAAA,UAAU,EAAE,sBAAY;AACpB;AACA,QAAI,KAAKV,MAAL,KAAgB,CAApB,EAAuB;AACnB,WAAKC,YAAL,GAAoB,IAApB;AACA,WAAKU,UAAL,CAAgB,KAAKR,WAArB,EAFmB,CAEe;AACrC;AACJ,GArCI;AAuCLS,EAAAA,WAAW,EAAE,qBAAUC,QAAV,EAAoB;AAC7B,QAAI,KAAKb,MAAL,KAAgB,CAApB,EAAuB;AAAC;AACpB,WAAKK,QAAL,CAAc,CAAd,EADmB,CACF;;AACjB,WAAKI,YAAL,CAAkB,YAAY;AAC1B,aAAKJ,QAAL,CAAc,CAAd,EAD0B,CACT;AACpB,OAFD,EAEGQ,QAFH;AAGH,KALD,MAMK,IAAI,KAAKb,MAAL,KAAgB,CAApB,EAAuB;AAAC;AACzB,WAAKK,QAAL,CAAc,CAAd,EADwB,CACP;AACpB;AACJ,GAjDI;AAmDL;AACAA,EAAAA,QAAQ,EAAE,kBAAUS,KAAV,EAAiB;AACvB,SAAKd,MAAL,GAAcc,KAAd;AACA,QAAIC,WAAW,GAAG,IAAInB,EAAE,CAACoB,KAAH,CAASC,WAAb,CAAyB,mBAAzB,EAA8C,IAA9C,CAAlB;AACAF,IAAAA,WAAW,CAACG,WAAZ,CAAwB,KAAKlB,MAA7B;AACA,SAAKmB,IAAL,CAAUC,aAAV,CAAwBL,WAAxB;AACH,GAzDI;AA2DLM,EAAAA,QAAQ,EAAE,oBAAY;AAClB,WAAO,KAAKrB,MAAZ;AACH,GA7DI;AA+DLsB,EAAAA,MAAM,EAAE,kBAAY;AAChB;AACA,QAAI,KAAKtB,MAAL,KAAgB,CAAhB,IAAqB,KAAKC,YAA1B,IAA0C,KAAKC,SAAnD,EAA8D;AAC1D,WAAKG,QAAL,CAAc,CAAd,EAD0D,CACzC;;AACjB,WAAKJ,YAAL,GAAoB,KAApB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACH;AACJ;AAtEI,CAAT","sourceRoot":"/","sourcesContent":["//不知道怎么用js写枚举变量，先用整数代替吧\r\n//规定  state === 0 表示准备状态\r\n//规定  state === 1 表示开始状态\r\n//规定  state === 2 表示停止状态\r\n//----------------------------------------------\r\n//增加：state === 3 表示中奖展示状态\r\n//增加：ShowTime    中奖展示时间\r\n//增加：state === 4 表示错误状态\r\n//增加：Timeout     连接超时倒计时\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _state: 0,\r\n        _receiveStop: false,\r\n        _interval: false,\r\n    },\r\n\r\n    Input_Error: function () {\r\n        //开始状态->错误状态\r\n        if (this._state === 1) {\r\n            this.unscheduleAllCallbacks();\r\n            this._receiveStop = false;\r\n            this._interval = false;\r\n            this.SetState(4);//进入错误状态\r\n        }\r\n    },\r\n\r\n    Input_Start: function (interval, timeout) {\r\n        //准备状态->开始状态\r\n        if (this._state === 0) {\r\n            this.SetState(1);//进入开始状态\r\n            this.scheduleOnce(function () {\r\n                this._interval = true;\r\n            }, interval);\r\n\r\n            this.scheduleOnce(this.Input_Error, timeout);//超时后进入错误状态\r\n        }\r\n    },\r\n\r\n    Input_Stop: function () {\r\n        //开始状态->停止状态\r\n        if (this._state === 1) {\r\n            this._receiveStop = true;\r\n            this.unschedule(this.Input_Error);//取消超时回调\r\n        }\r\n    },\r\n\r\n    Input_Ready: function (showTime) {\r\n        if (this._state === 2) {//停止状态->中奖展示状态\r\n            this.SetState(3);//进入中奖展示状态\r\n            this.scheduleOnce(function () {\r\n                this.SetState(0);//进入准备状态\r\n            }, showTime);\r\n        }\r\n        else if (this._state === 4) {//错误状态->准备状态\r\n            this.SetState(0);//进入准备状态\r\n        }\r\n    },\r\n\r\n    //改变当前状态，并投递状态改变事件\r\n    SetState: function (state) {\r\n        this._state = state;\r\n        var eventCustom = new cc.Event.EventCustom('Event_StateChange', true);\r\n        eventCustom.setUserData(this._state);\r\n        this.node.dispatchEvent(eventCustom);\r\n    },\r\n\r\n    GetState: function () {\r\n        return this._state;\r\n    },\r\n\r\n    update: function () {\r\n        //开始状态下，收到过停止命令并且等待的时间已超时\r\n        if (this._state === 1 && this._receiveStop && this._interval) {\r\n            this.SetState(2);//进入停止状态\r\n            this._receiveStop = false;\r\n            this._interval = false;\r\n        }\r\n    },\r\n});"]}