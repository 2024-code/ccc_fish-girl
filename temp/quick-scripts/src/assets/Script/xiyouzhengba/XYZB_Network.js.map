{"version":3,"sources":["assets\\Script\\xiyouzhengba\\XYZB_Network.js"],"names":["cc","Class","Component","onLoad","playerInfo","require","getInstant","gameMain","node","getComponent","sign","gameSign","userId","playerId","port","timer","sys","isNative","socket","SocketIO","connect","Lhjconfig","Server_IP","registEvent","on","ret","log","emit","JSON","stringify","userid","gametype","result","changeResultJSON_Function","userName","Obj","nickname","userCoin","score","headUrl","headimgurl","XYZB_LOBBYNET","disconnect","resultid","showInfo","msg","Date","getTime","startBets","ResultCode","getResult","historyList","historyNode","children","i","active","game_record","length","winN","win_num","zxh","win_special_num","Sprite","spriteFrame","cartoonSp","getChildByName","zxhSp","closeBets","parse"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    onLoad() {\r\n        this.playerInfo = require(\"PlayerInfo\").getInstant;\r\n        this.gameMain = this.node.getComponent('XYZB_Main');\r\n        this.sign = this.playerInfo.gameSign;\r\n        this.userId = this.playerInfo.playerId;\r\n        this.port = ':16001';\r\n        this.timer = 0;\r\n        //连接网络\r\n        if (cc.sys.isNative) {\r\n            this.socket = SocketIO.connect(Lhjconfig.Server_IP + this.port);\r\n        } else {\r\n            let socket = require(\"socket-io\");\r\n            this.socket = socket(Lhjconfig.Server_IP + this.port);\r\n        }\r\n        this.registEvent();\r\n    },\r\n\r\n    registEvent() {\r\n        this.socket.on(\"connected\", ret => {\r\n            cc.log('connected:' + ret);\r\n            if (ret) {\r\n                this.socket.emit(\"LoginGame\", JSON.stringify({\r\n                    userid: this.userId, //用户ID\r\n                    gametype: 11, //游戏类型\r\n                    sign: this.sign //签名\r\n                }));\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"loginGameResult\", ret => {\r\n            let result = this.changeResultJSON_Function(ret);\r\n            cc.log('游戏登陆成功=======================' + JSON.stringify(result));\r\n            this.userName = result.Obj.nickname;\r\n            this.userCoin = result.Obj.score / 100;\r\n            this.headUrl = result.Obj.headimgurl;\r\n            XYZB_LOBBYNET.disconnect();\r\n            if (result.resultid) { //游戏登录成功\r\n                this.gameMain.showInfo();\r\n                this.socket.emit('getGameRecord');\r\n            } else {\r\n                cc.log(result.msg);\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"BetStart\", ret => {\r\n            cc.log('BetStart:', ret);\r\n            this.socket.emit('getGameRecord');\r\n            this.timer = new Date().getTime() / 1000;\r\n            this.gameMain.startBets();\r\n        });\r\n\r\n        this.socket.on(\"OpenWinResult\", ret => {\r\n            cc.log('OpenWinResult:', ret);\r\n            let result = this.changeResultJSON_Function(ret);\r\n            if (result.ResultCode) {\r\n                this.userCoin = result.score / 100;\r\n                this.gameMain.getResult(result);\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"lotteryResult\", ret => {\r\n            cc.log('lotteryResult:', ret);\r\n            let result = this.changeResultJSON_Function(ret);\r\n            if (result.ResultCode) {\r\n\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"getGameRecordResult\", ret => {\r\n            cc.log('getGameRecordResult:', ret);\r\n            let result = this.changeResultJSON_Function(ret);\r\n            let historyList = this.gameMain.historyNode.children;\r\n            for (let i in historyList) {\r\n                historyList[i].active = false;\r\n            }\r\n            if (result.game_record.length > 0) {\r\n                for (let i in result.game_record) {\r\n                    let winN = result.game_record[i].win_num[0];\r\n                    winN = (winN == 0 || winN == 13) ? result.game_record[i].win_num[1] : winN;\r\n                    let zxh = result.game_record[i].win_special_num;\r\n                    historyList[i].active = true;\r\n                    historyList[i].getComponent(cc.Sprite).spriteFrame = this.gameMain.cartoonSp[winN];\r\n                    historyList[i].getChildByName('icon_he').getComponent(cc.Sprite).spriteFrame = this.gameMain.zxhSp[zxh];\r\n                }\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"BetStop\", ret => {\r\n            cc.log('BetStop:', ret);\r\n            this.gameMain.closeBets();\r\n        });\r\n    },\r\n\r\n    changeResultJSON_Function(ret) {\r\n        if (cc.sys.isNative) {\r\n            return JSON.parse(ret);\r\n        }\r\n        return ret;\r\n    },\r\n});"]}