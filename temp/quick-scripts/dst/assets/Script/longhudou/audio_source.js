
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/longhudou/audio_source.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2607bV14uFDVKOCqTAxeHQz', 'audio_source');
// Script/longhudou/audio_source.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    ADD_SCORE: {
      "default": null,
      type: cc.AudioClip
    },
    Click: {
      "default": null,
      type: cc.AudioClip
    },
    GAME_BLACKGROUND: {
      "default": null,
      type: cc.AudioClip
    },
    SEND_CARD: {
      "default": null,
      type: cc.AudioClip
    },
    alert: {
      "default": null,
      type: cc.AudioClip
    },
    bg: {
      "default": null,
      type: cc.AudioClip
    },
    chip: {
      "default": null,
      type: cc.AudioClip
    },
    choumaxiazhu: {
      "default": null,
      type: cc.AudioClip
    },
    countdown: {
      "default": null,
      type: cc.AudioClip
    },
    dragon: {
      "default": null,
      type: cc.AudioClip
    },
    flipcard: {
      "default": null,
      type: cc.AudioClip
    },
    he: {
      "default": null,
      type: cc.AudioClip
    },
    hu_win: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_1: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_2: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_3: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_4: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_5: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_6: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_7: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_8: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_9: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_10: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_11: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_12: {
      "default": null,
      type: cc.AudioClip
    },
    lhb_p_13: {
      "default": null,
      type: cc.AudioClip
    },
    long_win: {
      "default": null,
      type: cc.AudioClip
    },
    open_alert: {
      "default": null,
      type: cc.AudioClip
    },
    sendcard: {
      "default": null,
      type: cc.AudioClip
    },
    start_s: {
      "default": null,
      type: cc.AudioClip
    },
    startpush: {
      "default": null,
      type: cc.AudioClip
    },
    stop_s: {
      "default": null,
      type: cc.AudioClip
    },
    stoppush: {
      "default": null,
      type: cc.AudioClip
    },
    tie: {
      "default": null,
      type: cc.AudioClip
    },
    tiger: {
      "default": null,
      type: cc.AudioClip
    },
    win_bet: {
      "default": null,
      type: cc.AudioClip
    }
  },
  // LIFE-CYCLE CALLBACKS:
  // onLoad () {},
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,