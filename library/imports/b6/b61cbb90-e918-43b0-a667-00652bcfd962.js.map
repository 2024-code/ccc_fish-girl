{"version":3,"sources":["assets\\Script\\roulette\\RouletteNet.js"],"names":["RouletteNetWork","getInstant","_instance","undefined","Single","lobbyMain","roulette","rouletteSocket","playerInfo","playerHead","userid","init","require","loginGame_Function","loginIP","port","sign","Lhjconfig","Server_IP","roulette_port","socket","cc","sys","isNative","SocketIO","connect","connectServer_Function","on","ret","emit","JSON","stringify","gametype","error","result","changeResultJSON_Function","console","log","resultid","history","Obj","history_win","playerHeadId","headimgurl","playerCoin","score","getComponent","netWork","disconnect","bg_Black","active","gameDisconnect","gameName","audioEngine","stopAll","find","QieHuanScene_normal","addEvent","loadGameScene","showMessagebox_Function","msg","eventOn","data","startBet","ResultCode","cData","bet_dict_list","bet","pos","bet_gold","usrScore","string","toFixed","showResult","win","win_score","user_score","setLobbyMainObj_Function","scene","parse","lotteryEmit","type","gold","res","bet_type","bet_res","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["let RouletteNetWork = (() => {\r\n  /**\r\n   * 单例模式\r\n   */\r\n  function getInstant() {\r\n    var _instance;\r\n    if (_instance === undefined) {\r\n      _instance = new Single();\r\n    }\r\n    return _instance;\r\n  }\r\n  /**\r\n   * 逻辑层\r\n   */\r\n  function Single() {\r\n    this.lobbyMain = null;\r\n    this.roulette = null;\r\n    this.rouletteSocket = null;\r\n    this.playerInfo = null;\r\n    this.playerHead = null;\r\n    this.userid = null;\r\n\r\n    this.init = () => {\r\n      this.playerInfo = require(\"PlayerInfo\").getInstant;\r\n    };\r\n\r\n    this.loginGame_Function = (loginIP, port, userid, sign) => {\r\n      loginIP = Lhjconfig.Server_IP;\r\n      port = Lhjconfig.roulette_port;\r\n      this.userid = userid;\r\n      var socket = null;\r\n      if (cc.sys.isNative) {\r\n        this.rouletteSocket = SocketIO.connect(loginIP + port);\r\n      } else {\r\n        socket = require(\"socket-io\");\r\n        this.rouletteSocket = socket(loginIP + port);\r\n      }\r\n      //用户连接游戏服务器\r\n      this.connectServer_Function(userid, sign);\r\n\r\n      //连接\r\n      this.rouletteSocket.on(\"connected\", ret => {\r\n        if (ret) {\r\n          try {\r\n            //进入游戏\r\n            this.rouletteSocket.emit(\"LoginGame\", JSON.stringify({\r\n              userid: userid, //用户ID\r\n              gametype: 11, //游戏类型\r\n              sign: sign //签名\r\n            }));\r\n          } catch (error) {}\r\n        }\r\n      });\r\n    };\r\n\r\n    this.connectServer_Function = (userid, sign) => {\r\n      this.rouletteSocket && this.rouletteSocket.on(\"loginGameResult\", ret => {\r\n        var result = this.changeResultJSON_Function(ret);\r\n        console.log('loginGameResult', result);\r\n        if (result.resultid) { //游戏登录成\r\n          this.history = result.Obj.history_win;\r\n          this.playerInfo.playerHeadId = result.Obj.headimgurl;\r\n          this.playerInfo.playerCoin = result.Obj.score;\r\n          if (!!this.lobbyMain && !!this.lobbyMain.getComponent(\"LobbyMain\")) {\r\n            this.lobbyMain.getComponent(\"LobbyMain\").netWork.socket.disconnect();\r\n            this.lobbyMain.bg_Black.active = true;\r\n          }\r\n          this.playerInfo.gameDisconnect = false;\r\n          this.playerInfo.gameName = \"Roulette\";\r\n          cc.audioEngine.stopAll();\r\n          cc.find(\"Canvas/buttonCtrl\").getComponent(\"LobbyButtonClick\").QieHuanScene_normal(\"RouletteCrystal\");\r\n          this.addEvent();\r\n        } else {\r\n          //游戏登录失败\r\n          this.lobbyMain.getComponent(\"LobbyMain\").loadGameScene = false;\r\n          this.lobbyMain.getComponent(\"LobbyMain\").showMessagebox_Function(result.msg, 1, 4);\r\n          this.eventOn = true;\r\n        }\r\n      });\r\n\r\n      this.addEvent = () => {\r\n\r\n        this.rouletteSocket.on(\"BetStart\", data => {\r\n          console.log(\"开始下注\", data);\r\n          this.roulette.startBet();\r\n        });\r\n\r\n        this.rouletteSocket.on(\"lotteryResult\", data => {\r\n          var result = this.changeResultJSON_Function(data);\r\n          console.log(\"下注结果\", result);\r\n          if (result.ResultCode == 2) {\r\n            let cData = result.bet_dict_list[0];\r\n            this.roulette.bet(cData.pos, cData.bet_gold);\r\n            this.roulette.usrScore.string = (data.score / 100).toFixed(2);\r\n          }\r\n        });\r\n\r\n        this.rouletteSocket.on(\"OpenWinResult\", data => {\r\n          var result = this.changeResultJSON_Function(data);\r\n          console.log(\"OpenWinResult\", result);\r\n          this.roulette.showResult(result.win, result.win_score, result.user_score, result.history_win);\r\n        });\r\n      }\r\n    };\r\n\r\n    this.setLobbyMainObj_Function = scene => {\r\n      this.lobbyMain = scene;\r\n    };\r\n\r\n    this.changeResultJSON_Function = ret => {\r\n      if (cc.sys.isNative) {\r\n        return JSON.parse(ret);\r\n      }\r\n      return ret;\r\n    };\r\n\r\n    this.init();\r\n\r\n    /**************提交事件****************/\r\n    this.lotteryEmit = (type, gold, pos, res) => {\r\n      this.rouletteSocket.emit('lottery', JSON.stringify([{\r\n        bet_type: type,\r\n        bet_res: res,\r\n        bet_gold: gold * 100,\r\n        pos: pos\r\n      }]));\r\n    }\r\n  }\r\n\r\n  return {\r\n    getInstant: new getInstant()\r\n  }\r\n})();\r\n\r\nmodule.exports = RouletteNetWork;"]}