{"version":3,"sources":["assets\\LaoHuJi\\module\\SocketIO\\game_socket.js"],"names":["game_socket","socket","Nowcanvas","lobbyMain","isconn","socket_Inin","url","name","userInfo","self","console","log","io","connect","require","on","mes","msg","OnEvent","reqBet","JSON","stringify","userid","playerId","gametype","sign","gameSign","data","enterRoom","disconnect","roomid","ResultCode","data1","ResultData","userscore","toFixed","dictAnalyseResult","win","onBet","onGetAccountInfo","getFreeTime","nFreeTime","onFreeTime","freeCount","event","emit","exit","canvas","module","exports"],"mappings":";;;;;;AAAA,IAAIA,WAAW,GAAC;AACZC,EAAAA,MAAM,EAAC,IADK;AAEZC,EAAAA,SAAS,EAAC,IAFE;AAGZC,EAAAA,SAAS,EAAC,IAHE;AAGI;AAChBC,EAAAA,MAAM,EAAC,KAJK;AAII;AAChBC,EAAAA,WALY,uBAKAC,GALA,EAKIC,IALJ,EAKSC,QALT,EAKkB;AAC1B,QAAIC,IAAI,GAAC,IAAT;;AAGA,QAAG,KAAKR,MAAL,IAAa,IAAb,IAAmB,KAAKG,MAAL,IAAa,KAAnC,EAAyC;AACrCM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,GAAC,UAAjB,EAA4BD,GAA5B;AACA,WAAKL,MAAL,GAAcW,EAAE,CAACC,OAAH,CAAWP,GAAX,CAAd;AACA,WAAKH,SAAL,GAAiBW,OAAO,CAAC,oCAAD,CAAxB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH;;AAED,SAAKP,MAAL,CAAYc,EAAZ,CAAe,gBAAf,EAAgC,UAACC,GAAD,EAAO;AACnCN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEH,KAHD;AAKA,SAAKV,MAAL,CAAYc,EAAZ,CAAe,YAAf,EAA4B,UAACC,GAAD,EAAO;AAC/BN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEH,KAHD;AAKA,SAAKV,MAAL,CAAYc,EAAZ,CAAe,OAAf,EAAuB,UAACC,GAAD,EAAO;AAC1BN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEH,KAHD;AAKA,SAAKV,MAAL,CAAYc,EAAZ,CAAe,WAAf,EAA2B,UAACE,GAAD,EAAO;AAC9BP,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,UAAG,CAACF,IAAI,CAACL,MAAT,EAAgB;AACZK,QAAAA,IAAI,CAACS,OAAL;AACAT,QAAAA,IAAI,CAACL,MAAL,GAAY,IAAZ;AACH;;AACDK,MAAAA,IAAI,CAACU,MAAL,CAAY,WAAZ,EAAwBC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,MAAM,EAACd,QAAQ,CAACe,QAAjB;AAA0BC,QAAAA,QAAQ,EAAC,IAAnC;AAAwCC,QAAAA,IAAI,EAACjB,QAAQ,CAACkB;AAAtD,OAAf,CAAxB,EAN8B,CAO9B;AACH,KARD;AASH,GAxCW;AAyCZR,EAAAA,OAzCY,qBAyCH;AACL,QAAIT,IAAI,GAAC,IAAT;AACA,SAAKR,MAAL,CAAYc,EAAZ,CAAe,iBAAf,EAAiC,UAACY,IAAD,EAAQ;AACrCjB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BgB,IAA/B;AACAlB,MAAAA,IAAI,CAACU,MAAL,CAAY,gBAAZ,EAA6B,IAA7B;AACAV,MAAAA,IAAI,CAACN,SAAL,CAAeA,SAAf,CAAyByB,SAAzB,GAAmC,IAAnC;AACAnB,MAAAA,IAAI,CAACN,SAAL,CAAeF,MAAf,CAAsB4B,UAAtB,GAJqC,CAIY;;AACjDpB,MAAAA,IAAI,CAACU,MAAL,CAAY,WAAZ,EAAwBC,IAAI,CAACC,SAAL,CAAe;AAACS,QAAAA,MAAM,EAAC;AAAR,OAAf,CAAxB;AACH,KAND;AAOA,SAAK7B,MAAL,CAAYc,EAAZ,CAAe,eAAf,EAA+B,UAACY,IAAD,EAAQ;AACnCjB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BgB,IAA7B;;AACA,UAAGA,IAAI,CAACI,UAAL,IAAiB,CAAC,CAArB,EAAuB;AAAC;AAAS,OAFE,CAEa;;;AAChD,UAAIC,KAAK,GAACL,IAAI,CAACM,UAAf;AACAD,MAAAA,KAAK,CAACE,SAAN,GAAgB,CAACF,KAAK,CAACE,SAAN,GAAgB,IAAjB,EAAuBC,OAAvB,CAA+B,CAA/B,CAAhB,CAJmC,CAIyB;;AAC5DR,MAAAA,IAAI,CAACS,iBAAL,CAAuBC,GAAvB,GAA2BV,IAAI,CAACS,iBAAL,CAAuBC,GAAvB,GAA2B,IAAtD,CALmC,CAKyB;;AAC5D5B,MAAAA,IAAI,CAACP,SAAL,CAAeoC,KAAf,CAAqB,IAArB,EAA0BX,IAAI,CAACS,iBAA/B,EAAiDJ,KAAjD;AACAvB,MAAAA,IAAI,CAACP,SAAL,CAAeqC,gBAAf,CAAgCZ,IAAI,CAACI,UAArC,EAAgDC,KAAK,CAACE,SAAtD,EAAgEP,IAAI,CAACS,iBAAL,CAAuBI,WAAvB,CAAmCC,SAAnG;AACH,KARD;AASA,SAAKxC,MAAL,CAAYc,EAAZ,CAAe,iBAAf,EAAkC,UAACY,IAAD,EAAQ;AACtCjB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BgB,IAA9B,EADsC,CAEtC;AACH,KAHD;AAIA,SAAK1B,MAAL,CAAYc,EAAZ,CAAe,sBAAf,EAAsC,UAACY,IAAD,EAAQ;AAC1CjB,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCgB,IAApC;AACAlB,MAAAA,IAAI,CAACP,SAAL,CAAewC,UAAf,CAA0Bf,IAAI,CAACgB,SAA/B;AACH,KAHD;AAIH,GAnEW;AAoEZxB,EAAAA,MApEY,kBAoELyB,KApEK,EAoECjB,IApED,EAoEM;AACd;AACA,SAAK1B,MAAL,CAAY4C,IAAZ,CAAiBD,KAAjB,EAAuBjB,IAAvB;AACH,GAvEW;AAwEZmB,EAAAA,IAxEY,kBAwEN;AACFpC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAKV,MAAL,CAAY4B,UAAZ;AACA,SAAK5B,MAAL,GAAY,IAAZ;AACA,SAAKG,MAAL,GAAY,KAAZ;AACA,SAAK2C,MAAL,GAAY,IAAZ;AACH;AA9EW,CAAhB;AAiFAC,MAAM,CAACC,OAAP,GAAiBjD,WAAjB","sourceRoot":"/","sourcesContent":["var game_socket={\r\n    socket:null,\r\n    Nowcanvas:null,\r\n    lobbyMain:null, //脚本的this作用域\r\n    isconn:false,   //是否连接过服务器\r\n    socket_Inin(url,name,userInfo){\r\n        var self=this;\r\n       \r\n        \r\n        if(this.socket==null||this.isconn==false){\r\n            console.log(name+'_connIng',url);\r\n            this.socket = io.connect(url);\r\n            this.lobbyMain = require(\"../../../Script/Lobby/LobbyNetWork\");\r\n            console.log(userInfo);\r\n        }\r\n\r\n        this.socket.on('connect_failed',(mes)=>{\r\n            console.log(\"连接失败\");\r\n            \r\n        });\r\n\r\n        this.socket.on('connecting',(mes)=>{\r\n            console.log(\"正在连接\");\r\n            \r\n        });\r\n\r\n        this.socket.on('error',(mes)=>{\r\n            console.log(\"连接错误\");\r\n            \r\n        });\r\n\r\n        this.socket.on('connected',(msg)=>{\r\n            console.log('连上了````````');\r\n            if(!self.isconn){\r\n                self.OnEvent();\r\n                self.isconn=true;         \r\n            }    \r\n            self.reqBet('LoginGame',JSON.stringify({userid:userInfo.playerId,gametype:null,sign:userInfo.gameSign}));\r\n            //self.reqBet('LoginRoom',{roomid:1});\r\n        });\r\n    },\r\n    OnEvent(){\r\n        var self=this;\r\n        this.socket.on('loginGameResult',(data)=>{\r\n            console.log('loginGameResult:',data);\r\n            self.reqBet('LoginfreeCount',null);\r\n            self.lobbyMain.lobbyMain.enterRoom=true;\r\n            self.lobbyMain.socket.disconnect();              //断开大厅长连接\r\n            self.reqBet('LoginRoom',JSON.stringify({roomid:1}));\r\n        });\r\n        this.socket.on('lotteryResult',(data)=>{\r\n            console.log('lotteryResult:',data);\r\n            if(data.ResultCode==-2){return; }               //金币不够相关处理\r\n            let data1=data.ResultData;\r\n            data1.userscore=(data1.userscore*0.01).toFixed(2);          //强行小数\r\n            data.dictAnalyseResult.win=data.dictAnalyseResult.win*0.01; //强行小数\r\n            self.Nowcanvas.onBet(null,data.dictAnalyseResult,data1);\r\n            self.Nowcanvas.onGetAccountInfo(data.ResultCode,data1.userscore,data.dictAnalyseResult.getFreeTime.nFreeTime);\r\n        });\r\n        this.socket.on('LoginRoomResult', (data)=>{\r\n            console.log('LoginRoomResult',data);\r\n            //self.canvas.onFreeTime(data.ResultData.freeCount);                    //调用刷新免费次数的方法 \r\n        });\r\n        this.socket.on('LoginfreeCountResult',(data)=>{\r\n            console.log('LoginfreeCountResult:',data);\r\n            self.Nowcanvas.onFreeTime(data.freeCount);     \r\n        });\r\n    },\r\n    reqBet(event,data){\r\n        //console.log('reqBet',data);\r\n        this.socket.emit(event,data);    \r\n    },\r\n    exit(){\r\n        console.log('执行断开游戏连接方法');\r\n        this.socket.disconnect();\r\n        this.socket=null;\r\n        this.isconn=false;\r\n        this.canvas=null;\r\n    }\r\n}\r\n\r\nmodule.exports = game_socket;\r\n"]}