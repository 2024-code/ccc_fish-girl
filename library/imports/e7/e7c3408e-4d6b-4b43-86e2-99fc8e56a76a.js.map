{"version":3,"sources":["assets\\Script\\Lobby\\BCNetWork.js"],"names":["BCNetWork","playerInfo","socket","io","connected","netWorkInit_Function","require","getInstant","url","Lhjconfig","Server_IP","cc","sys","isNative","SocketIO","connect","loginSocketOn_Function","self","on","ret","key","$events","removeListen","anotherFunctionInit_Function","console","log","JSON","stringify","code","loader","loadRes","err","prefab","setAutoReleaseRecursively","newNode","instantiate","getComponent","setView","data","find","addChild","bind","logoutAccount_Function","disconnect","changeResultJSON","parse","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\r\n * 消息SOCKET通讯\r\n */\r\nvar BCNetWork = {\r\n    playerInfo: null,\r\n    socket: null,\r\n    io: null,\r\n    connected: false,\r\n    /**\r\n     * 初始化\r\n     */\r\n    netWorkInit_Function: function () {\r\n        this.io = null;\r\n        this.socket = null;\r\n        this.connected = false;\r\n        this.playerInfo = require(\"PlayerInfo\").getInstant;\r\n        this.url = Lhjconfig.Server_IP + ':13000';\r\n        if (cc.sys.isNative) {\r\n            this.socket = SocketIO.connect(this.url);\r\n        } else {\r\n            this.io = require(\"socket-io\");\r\n            this.socket = this.io(this.url);\r\n        }\r\n        this.loginSocketOn_Function();\r\n    },\r\n\r\n    loginSocketOn_Function: function () {\r\n        var self = this;\r\n        /**\r\n         * 连接错误\r\n         */\r\n        self.socket.on(\"connect_error\", function (ret) {\r\n            if (self.socket !== null) {\r\n                for (var key in self.socket.$events) {\r\n                    if (key !== 0) {\r\n                        self.socket.removeListen(key);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * 连接超时\r\n         */\r\n        self.socket.on(\"connect_timeout\", function (ret) {\r\n            if (self.socket !== null) {\r\n                for (var key in self.socket.$events) {\r\n                    if (key !== 0) {\r\n                        self.socket.removeListen(key);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * 网络错误\r\n         */\r\n        self.socket.on(\"error\", function (ret) {\r\n            if (self.socket !== null) {\r\n                for (var key in self.socket.$events) {\r\n                    if (key !== 0) {\r\n                        self.socket.removeListen(key);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * 重新连接\r\n         */\r\n        self.socket.on(\"reconnect\", function (ret) {\r\n            if (self.socket !== null) {\r\n                for (var key in self.socket.$events) {\r\n                    if (key !== 0) {\r\n                        self.socket.removeListen(key);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * 连接socke.\r\n         * 用户登录\r\n         */\r\n        self.socket.on(\"connected\", function (ret) {\r\n            //cc.log(ret);\r\n            if (ret) {\r\n                self.connected = true;\r\n            }\r\n        });\r\n\r\n        self.anotherFunctionInit_Function();\r\n\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    anotherFunctionInit_Function: function () {\r\n        var self = this;\r\n\r\n        /**\r\n         * 走马灯信息\r\n         */\r\n        self.socket.on(\"bigPriceMessage\", function (ret) {\r\n            console.log('noticeMsg:' + JSON.stringify(ret));\r\n            if(ret.code){\r\n                cc.loader.loadRes(\"bc_Message\", function (err, prefab) {\r\n                    cc.loader.setAutoReleaseRecursively(prefab, true);\r\n                    let newNode = cc.instantiate(prefab);\r\n                    newNode.getComponent(\"BC_message\").setView(ret.data);\r\n                    cc.find(\"Canvas\").addChild(newNode);\r\n                }.bind(this));\r\n            }\r\n        });\r\n\r\n        /**\r\n         * 断开连接\r\n         */\r\n        self.socket.on(\"disconnect\", function () {\r\n            self.connected = false;\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * 断开socket\r\n     */\r\n    logoutAccount_Function: function () {\r\n        console.log('logoutAccount_Function');\r\n        this.socket.disconnect();\r\n        this.socket = null;\r\n    },\r\n\r\n    /**\r\n     * 解析JSON数据\r\n     * @param {*} ret \r\n     */\r\n    changeResultJSON: function (ret) {\r\n        if (cc.sys.isNative) {\r\n            return JSON.parse(ret);\r\n        }\r\n        return ret;\r\n    },\r\n}\r\n\r\nmodule.exports = BCNetWork;"]}