{"version":3,"sources":["assets\\Script\\21dian\\blackJackMain.js"],"names":["cc","Class","Component","properties","myChipsLbl","Label","chipPbList","Prefab","coinNode","Node","betTip","chipsPool","chipsNode","btnList","Button","helpBd","gameResultPicList","userHead","Sprite","userName","userCoin","cardAtlas","SpriteAtlas","bankerCardNode","playerCardNode","bankerArrow","playerArrow","playerScoreLbl","bankerScoreLbl","onLoad","playerInfo","require","getInstant","net","node","getComponent","audio","bet","lastChips","myCoin","playerScore","bankerScore","start","clearGame","string","removeAllChildren","i","active","onClick","ev","args","socket","disconnect","director","loadScene","emit","playerStatus","betCallBack","toFixed","rollCoin","insuranceBool","coinJson","coin","instantiate","addChild","position","v2","runAction","moveTo","Math","random","onToggle","parseInt","startBet","getCard","spr","addComponent","spriteFrame","getSpriteFrame","changeFlowerToStr","flower","str","u","v","firstDeal","curIndex","schedule","deal","who","defaultPos","card","rotation","whoNode","whoPos","sequence","spawn","rotateTo","callFunc","sprName","parent","setCount","score","scoreLlb","cardScore","index","overAction","bankerCards","whoWin","scheduleOnce","length","children"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAEJ,EAAE,CAACK,KADP;AAERC,IAAAA,UAAU,EAAE,CAACN,EAAE,CAACO,MAAJ,CAFJ;AAEiB;AACzBC,IAAAA,QAAQ,EAAER,EAAE,CAACS,IAHL;AAIRC,IAAAA,MAAM,EAAEV,EAAE,CAACS,IAJH;AAKRE,IAAAA,SAAS,EAAEX,EAAE,CAACS,IALN;AAMRG,IAAAA,SAAS,EAAEZ,EAAE,CAACS,IANN;AAORI,IAAAA,OAAO,EAAE,CAACb,EAAE,CAACc,MAAJ,CAPD;AAOc;AACtBC,IAAAA,MAAM,EAAEf,EAAE,CAACS,IARH;AASRO,IAAAA,iBAAiB,EAAE,CAAChB,EAAE,CAACS,IAAJ,CATX;AASsB;AAC9BQ,IAAAA,QAAQ,EAAEjB,EAAE,CAACkB,MAVL;AAWRC,IAAAA,QAAQ,EAAEnB,EAAE,CAACK,KAXL;AAYRe,IAAAA,QAAQ,EAAEpB,EAAE,CAACK,KAZL;AAaRgB,IAAAA,SAAS,EAAErB,EAAE,CAACsB,WAbN;AAcRC,IAAAA,cAAc,EAAEvB,EAAE,CAACS,IAdX;AAeRe,IAAAA,cAAc,EAAExB,EAAE,CAACS,IAfX;AAgBRgB,IAAAA,WAAW,EAAEzB,EAAE,CAACS,IAhBR;AAiBRiB,IAAAA,WAAW,EAAE1B,EAAE,CAACS,IAjBR;AAkBRkB,IAAAA,cAAc,EAAE3B,EAAE,CAACK,KAlBX;AAmBRuB,IAAAA,cAAc,EAAE5B,EAAE,CAACK;AAnBX,GAHP;AA0BLwB,EAAAA,MA1BK,oBA0BI;AACL,SAAKC,UAAL,GAAkBC,OAAO,CAAC,YAAD,CAAP,CAAsBC,UAAxC;AACA,SAAKC,GAAL,GAAW,KAAKC,IAAL,CAAUC,YAAV,CAAuB,kBAAvB,CAAX;AACA,SAAKC,KAAL,GAAa,KAAKF,IAAL,CAAUC,YAAV,CAAuB,gBAAvB,CAAb,CAHK,CAKL;;AACA,SAAKE,GAAL,GAAW,GAAX;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,WAAL,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB;AACA,SAAKC,WAAL,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB;AACH,GArCI;AAuCLC,EAAAA,KAvCK,mBAuCG;AACJ,SAAKC,SAAL;AACH,GAzCI;AA2CLA,EAAAA,SA3CK,uBA2CO;AACR,SAAKH,WAAL,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB;AACA,SAAKC,WAAL,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB;AACA,SAAKd,cAAL,CAAoBiB,MAApB,GAA6B,GAA7B;AACA,SAAKhB,cAAL,CAAoBgB,MAApB,GAA6B,GAA7B;AACA,SAAKxC,UAAL,CAAgBwC,MAAhB,GAAyB,MAAzB;AACA,SAAKjC,SAAL,CAAekC,iBAAf;;AACA,SAAK,IAAIC,CAAT,IAAc,KAAKjC,OAAnB,EAA4B;AACxB,WAAKA,OAAL,CAAaiC,CAAb,EAAgBZ,IAAhB,CAAqBa,MAArB,GAA8B,KAA9B;AACH;;AACD,SAAKnC,SAAL,CAAemC,MAAf,GAAwB,IAAxB;;AACA,SAAK,IAAID,EAAT,IAAc,KAAK9B,iBAAnB,EAAsC;AAClC,WAAKA,iBAAL,CAAuB8B,EAAvB,EAA0BC,MAA1B,GAAmC,KAAnC;AACH;;AACD,SAAKxB,cAAL,CAAoBsB,iBAApB;AACA,SAAKrB,cAAL,CAAoBqB,iBAApB;AACA,SAAKrC,QAAL,CAAcqC,iBAAd;AACA,SAAKnC,MAAL,CAAYqC,MAAZ,GAAqB,IAArB;AACA,SAAKtB,WAAL,CAAiBsB,MAAjB,GAA0B,KAA1B;AACA,SAAKrB,WAAL,CAAiBqB,MAAjB,GAA0B,KAA1B;AACH,GA/DI;AAiELC,EAAAA,OAjEK,mBAiEGC,EAjEH,EAiEOC,IAjEP,EAiEa;AACd,QAAIA,IAAI,IAAI,UAAZ,EAAwB;AACpB,WAAKjB,GAAL,CAASkB,MAAT,CAAgBC,UAAhB;AACApD,MAAAA,EAAE,CAACqD,QAAH,CAAYC,SAAZ,CAAsB,WAAtB;AACH,KAHD,MAGO,IAAIJ,IAAI,IAAI,OAAZ,EAAqB;AACxB,UAAI,KAAKX,MAAL,IAAe,KAAKF,GAApB,IAA2B,KAAKzB,SAAL,CAAemC,MAA9C,EAAsD;AAClD,aAAKrC,MAAL,CAAYqC,MAAZ,GAAqB,KAArB;AACA,aAAKnC,SAAL,CAAemC,MAAf,GAAwB,KAAxB;AACA,aAAKd,GAAL,CAASkB,MAAT,CAAgBI,IAAhB,CAAqB,SAArB,EAAgC,KAAKlB,GAArC;AACH;AACJ,KANM,MAMA,IAAIa,IAAI,IAAI,MAAZ,EAAoB;AACvB,WAAKnC,MAAL,CAAYgC,MAAZ,GAAqB,IAArB;AACH,KAFM,MAEA,IAAIG,IAAI,IAAI,WAAZ,EAAyB;AAC5B,WAAKnC,MAAL,CAAYgC,MAAZ,GAAqB,KAArB;AACH,KAFM,MAEA,IAAIG,IAAI,IAAI,KAAZ,EAAmB;AACtB,WAAKM,YAAL,CAAkB,CAAC,CAAnB,EADsB,CAEtB;;AACA,WAAKvB,GAAL,CAASkB,MAAT,CAAgBI,IAAhB,CAAqB,UAArB,EAAiC,CAAjC;AACH,KAJM,MAIA,IAAIL,IAAI,IAAI,OAAZ,EAAqB;AACxB,WAAKM,YAAL,CAAkB,CAAC,CAAnB,EADwB,CAExB;;AACA,WAAKvB,GAAL,CAASkB,MAAT,CAAgBI,IAAhB,CAAqB,UAArB,EAAiC,CAAjC;AACH,KAJM,MAIA,IAAIL,IAAI,IAAI,QAAZ,EAAsB;AACzB,WAAKM,YAAL,CAAkB,CAAC,CAAnB,EADyB,CAEzB;;AACA,WAAKvB,GAAL,CAASkB,MAAT,CAAgBI,IAAhB,CAAqB,UAArB,EAAiC,CAAjC;AACH,KAJM,MAIA,IAAIL,IAAI,IAAI,WAAZ,EAAyB;AAC5B,WAAKM,YAAL,CAAkB,CAAC,CAAnB;AACA,WAAKvB,GAAL,CAASkB,MAAT,CAAgBI,IAAhB,CAAqB,SAArB;AACH,KAHM,MAGA,IAAIL,IAAI,IAAI,QAAZ,EAAsB;AACzB,WAAKP,SAAL;AACH;AACJ,GAjGI;AAmGLc,EAAAA,WAnGK,yBAmGS;AACV,SAAKlB,MAAL,IAAe,KAAKF,GAApB;AACA,SAAKC,SAAL,GAAiB,KAAKD,GAAtB;AACA,SAAKjB,QAAL,CAAcwB,MAAd,GAAuB,CAAC,KAAKL,MAAL,GAAc,GAAf,EAAoBmB,OAApB,CAA4B,CAA5B,CAAvB;AACA,SAAKtD,UAAL,CAAgBwC,MAAhB,GAAyB,CAAC,KAAKN,SAAL,GAAiB,GAAlB,EAAuBoB,OAAvB,CAA+B,CAA/B,CAAzB;AACA,SAAKC,QAAL;AACH,GAzGI;AA2GLA,EAAAA,QA3GK,oBA2GIC,aA3GJ,EA2GmB;AACpB,QAAIC,QAAQ,GAAG;AACX,WAAK,CADM;AAEX,YAAM,CAFK;AAGX,YAAM,CAHK;AAIX,aAAO,CAJI;AAKX,aAAO;AALI,KAAf;AAOA,QAAIC,IAAI,GAAG9D,EAAE,CAAC+D,WAAH,CAAe,KAAKzD,UAAL,CAAgB,CAAC,CAACsD,aAAF,GAAkB,CAAlB,GAAsBC,QAAQ,CAAC,KAAKxB,GAAN,CAA9C,CAAf,CAAX;AACA,SAAK7B,QAAL,CAAcwD,QAAd,CAAuBF,IAAvB;AACAA,IAAAA,IAAI,CAACG,QAAL,GAAgBjE,EAAE,CAACkE,EAAH,CAAM,GAAN,EAAW,CAAC,GAAZ,CAAhB;AACAJ,IAAAA,IAAI,CAACK,SAAL,CAAenE,EAAE,CAACoE,MAAH,CAAU,GAAV,EAAepE,EAAE,CAACkE,EAAH,CAAMG,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,EAA5B,EAAgCD,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,EAAtD,CAAf,CAAf;AACH,GAvHI;AAyHLC,EAAAA,QAzHK,oBAyHItB,EAzHJ,EAyHQC,IAzHR,EAyHc;AACf,SAAKb,GAAL,GAAWmC,QAAQ,CAACtB,IAAD,CAAR,GAAiB,GAA5B;AACH,GA3HI;AA6HLuB,EAAAA,QA7HK,sBA6HM;AACP,SAAK7D,SAAL,CAAemC,MAAf,GAAwB,IAAxB;AACA,SAAKrC,MAAL,CAAYqC,MAAZ,GAAqB,IAArB;AACH,GAhII;AAkIL2B,EAAAA,OAlIK,qBAkIK;AACN,QAAIxC,IAAI,GAAG,IAAIlC,EAAE,CAACS,IAAP,EAAX;AACA,SAAKyB,IAAL,CAAU8B,QAAV,CAAmB9B,IAAnB;AACA,QAAIyC,GAAG,GAAGzC,IAAI,CAAC0C,YAAL,CAAkB5E,EAAE,CAACkB,MAArB,CAAV;AACAyD,IAAAA,GAAG,CAACE,WAAJ,GAAkB,KAAKxD,SAAL,CAAeyD,cAAf,CAA8B,SAA9B,CAAlB;AACA,WAAO5C,IAAP;AACH,GAxII;AA0IL6C,EAAAA,iBA1IK,6BA0IaC,MA1Ib,EA0IqB;AACtB,QAAIC,GAAG,GAAG,SAAV;;AACA,QAAI,CAAC,CAACD,MAAN,EAAc;AACV,UAAIE,CAAC,GAAGV,QAAQ,CAACQ,MAAM,GAAG,EAAT,GAAc,EAAf,CAAhB;AACA,UAAIG,CAAC,GAAGH,MAAM,GAAG,EAAjB;AACAC,MAAAA,GAAG,GAAME,CAAN,UAAWD,CAAC,IAAI,EAAL,GAAUA,CAAV,GAAc,MAAMA,CAA/B,CAAH;AACH;;AACD,WAAOD,GAAP;AACH,GAlJI;AAoJLG,EAAAA,SApJK,uBAoJc;AAAA;;AAAA,sCAANlC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACf,QAAImC,QAAQ,GAAG,CAAf;AACA,SAAKC,QAAL,CAAc,YAAM;AAChB,UAAID,QAAQ,IAAI,CAAhB,EAAmB;AACf,QAAA,KAAI,CAACE,IAAL,CAAU,QAAV,EAAoBrC,IAAI,CAACmC,QAAD,CAAxB;AACH,OAFD,MAEO;AACH,QAAA,KAAI,CAACE,IAAL,CAAU,EAAV,EAAcrC,IAAI,CAACmC,QAAD,CAAlB;AACH;;AACDA,MAAAA,QAAQ;;AACR,UAAIA,QAAQ,IAAI,CAAhB,EAAmB;AACf,QAAA,KAAI,CAAC3D,WAAL,CAAiBqB,MAAjB,GAA0B,IAA1B;AACH;AACJ,KAVD,EAUG,GAVH,EAUQ,CAVR;AAWH,GAjKI;AAmKLwC,EAAAA,IAnKK,gBAmKAC,GAnKA,EAmKKR,MAnKL,EAmKa;AAAA;;AACd,QAAIS,UAAU,GAAGzF,EAAE,CAACkE,EAAH,CAAM,GAAN,EAAW,GAAX,CAAjB;AACA,QAAIwB,IAAI,GAAG,KAAKhB,OAAL,EAAX;AACAgB,IAAAA,IAAI,CAACzB,QAAL,GAAgBwB,UAAhB;AACAC,IAAAA,IAAI,CAACC,QAAL,GAAgB,CAAC,EAAjB;AACA,QAAIC,OAAO,GAAG,KAAKpE,cAAnB;AACA,QAAIqE,MAAM,GAAG7F,EAAE,CAACkE,EAAH,CAAM,CAAN,EAAS,CAAC,GAAV,CAAb;;AACA,QAAIsB,GAAG,IAAI,QAAX,EAAqB;AACjBI,MAAAA,OAAO,GAAG,KAAKrE,cAAf;AACAsE,MAAAA,MAAM,GAAG7F,EAAE,CAACkE,EAAH,CAAM,CAAN,EAAS,GAAT,CAAT;AACH,KAVa,CAYd;;;AACAwB,IAAAA,IAAI,CAACvB,SAAL,CAAenE,EAAE,CAAC8F,QAAH,CAAY9F,EAAE,CAAC+F,KAAH,CAAS/F,EAAE,CAACoE,MAAH,CAAU,GAAV,EAAeyB,MAAf,CAAT,EAAiC7F,EAAE,CAACgG,QAAH,CAAY,GAAZ,EAAiB,CAAjB,CAAjC,CAAZ,EAAmEhG,EAAE,CAACiG,QAAH,CAAY,YAAM;AAChG,UAAIC,OAAO,GAAG,MAAI,CAACnB,iBAAL,CAAuBC,MAAvB,CAAd;;AACAU,MAAAA,IAAI,CAACvD,YAAL,CAAkBnC,EAAE,CAACkB,MAArB,EAA6B2D,WAA7B,GAA2C,MAAI,CAACxD,SAAL,CAAeyD,cAAf,CAA8BoB,OAA9B,CAA3C;AACAR,MAAAA,IAAI,CAACS,MAAL,GAAcP,OAAd;AACAF,MAAAA,IAAI,CAACzB,QAAL,GAAgBjE,EAAE,CAACkE,EAAH,CAAM,CAAN,EAAS,CAAT,CAAhB;;AACA,MAAA,MAAI,CAACkC,QAAL,CAAcZ,GAAd,EAAmBR,MAAnB;AACH,KANiF,CAAnE,CAAf;AAOH,GAvLI;AAyLLoB,EAAAA,QAzLK,oBAyLIZ,GAzLJ,EAyLSR,MAzLT,EAyLiB;AAClB;AACA,QAAIqB,KAAK,GAAGb,GAAG,IAAI,QAAP,GAAkB,KAAK/C,WAAvB,GAAqC,KAAKD,WAAtD;AACA,QAAI8D,QAAQ,GAAGd,GAAG,IAAI,QAAP,GAAkB,KAAK5D,cAAvB,GAAwC,KAAKD,cAA5D;AACA,QAAI4E,SAAS,GAAG/B,QAAQ,CAACQ,MAAM,GAAG,EAAT,GAAc,EAAf,CAAxB;AACAuB,IAAAA,SAAS,GAAGA,SAAS,IAAI,EAAb,GAAkB,EAAlB,GAAuBA,SAAnC;;AACA,QAAIA,SAAS,IAAI,CAAjB,EAAoB;AAChBF,MAAAA,KAAK,CAAC,CAAD,CAAL,IAAY,CAAZ;AACAA,MAAAA,KAAK,CAAC,CAAD,CAAL,IAAY,EAAZ;AACH,KAHD,MAGO;AACHA,MAAAA,KAAK,CAAC,CAAD,CAAL,IAAYE,SAAZ;AACAF,MAAAA,KAAK,CAAC,CAAD,CAAL,IAAYE,SAAZ;AACH;;AACD,QAAIF,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAArB,EAA0B;AACtBC,MAAAA,QAAQ,CAAC1D,MAAT,GAAkByD,KAAK,CAAC,CAAD,CAAvB;AACH,KAFD,MAEO;AACH,UAAIA,KAAK,CAAC,CAAD,CAAL,IAAY,EAAZ,IAAkBA,KAAK,CAAC,CAAD,CAAL,IAAY,EAAlC,EAAsC;AAClC,YAAIA,KAAK,CAAC,CAAD,CAAL,IAAY,EAAZ,IAAkBA,KAAK,CAAC,CAAD,CAAL,IAAY,EAAlC,EAAsC;AAClCC,UAAAA,QAAQ,CAAC1D,MAAT,GAAkB,IAAlB;AACH,SAFD,MAEO;AACH0D,UAAAA,QAAQ,CAAC1D,MAAT,GAAkByD,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX,GAAiBA,KAAK,CAAC,CAAD,CAAxC;AACH;AACJ,OAND,MAMO,IAAIA,KAAK,CAAC,CAAD,CAAL,GAAW,EAAX,IAAiBA,KAAK,CAAC,CAAD,CAAL,GAAW,EAAhC,EAAoC;AACvCC,QAAAA,QAAQ,CAAC1D,MAAT,GAAkByD,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAjB,GAAuBA,KAAK,CAAC,CAAD,CAA5B,GAAkCA,KAAK,CAAC,CAAD,CAAzD;AACH,OAFM,MAEA;AACHC,QAAAA,QAAQ,CAAC1D,MAAT,GAAkByD,KAAK,CAAC,CAAD,CAAL,IAAY,EAAZ,GAAiBA,KAAK,CAAC,CAAD,CAAtB,GAA4BA,KAAK,CAAC,CAAD,CAAnD;AACH;AACJ;AACJ,GArNI;AAuNL7C,EAAAA,YAvNK,wBAuNQgD,KAvNR,EAuNe;AAChB,SAAK,IAAI1D,CAAT,IAAc,KAAKjC,OAAnB,EAA4B;AACxB,WAAKA,OAAL,CAAaiC,CAAb,EAAgBZ,IAAhB,CAAqBa,MAArB,GAA8B,KAA9B;AACH;;AACD,QAAIyD,KAAK,IAAI,CAAb,EAAgB;AACZ;AACA,WAAK3F,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACA,WAAKlC,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACA,WAAKlC,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACA,WAAKlC,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACH,KAND,MAMO,IAAIyD,KAAK,IAAI,CAAb,EAAgB;AACnB;AACA,WAAK3F,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACA,WAAKlC,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACA,WAAKlC,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACH,KALM,MAKA,IAAIyD,KAAK,IAAI,CAAb,EAAgB;AACnB;AACA,WAAK3F,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACA,WAAKlC,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACH,KAJM,MAIA,IAAIyD,KAAK,IAAI,CAAb,EAAgB;AACnB,WAAK3F,OAAL,CAAa,CAAb,EAAgBqB,IAAhB,CAAqBa,MAArB,GAA8B,IAA9B;AACH;AACJ,GA7OI;AA+OL0D,EAAAA,UA/OK,sBA+OMC,WA/ON,EA+OmBC,MA/OnB,EA+O2BN,KA/O3B,EA+OkC;AAAA;;AACnC;AACA,SAAK,IAAIvD,CAAT,IAAc,KAAKjC,OAAnB,EAA4B;AACxB,WAAKA,OAAL,CAAaiC,CAAb,EAAgBZ,IAAhB,CAAqBa,MAArB,GAA8B,KAA9B;AACH;;AACD,SAAKrB,WAAL,CAAiBqB,MAAjB,GAA0B,KAA1B;AACA,SAAK6D,YAAL,CAAkB,YAAM;AACpB,MAAA,MAAI,CAACnF,WAAL,CAAiBsB,MAAjB,GAA0B,IAA1B;;AACA,UAAI2D,WAAW,CAACG,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,YAAIL,KAAK,GAAG,CAAZ;;AACA,QAAA,MAAI,CAAClB,QAAL,CAAc,YAAM;AAChB,UAAA,MAAI,CAACC,IAAL,CAAU,QAAV,EAAoBmB,WAAW,CAACF,KAAD,CAA/B;;AACAA,UAAAA,KAAK;;AACL,cAAIA,KAAK,IAAIE,WAAW,CAACG,MAAzB,EAAiC;AAC7B,YAAA,MAAI,CAACD,YAAL,CAAkB,YAAM;AACpB,kBAAIV,OAAO,GAAG,MAAI,CAACnB,iBAAL,CAAuB2B,WAAW,CAAC,CAAD,CAAlC,CAAd;;AACA,cAAA,MAAI,CAACN,QAAL,CAAc,QAAd,EAAwBM,WAAW,CAAC,CAAD,CAAnC;;AACA,cAAA,MAAI,CAACnF,cAAL,CAAoBuF,QAApB,CAA6B,CAA7B,EAAgC3E,YAAhC,CAA6CnC,EAAE,CAACkB,MAAhD,EAAwD2D,WAAxD,GAAsE,MAAI,CAACxD,SAAL,CAAeyD,cAAf,CAA8BoB,OAA9B,CAAtE;AACA,cAAA,MAAI,CAAClF,iBAAL,CAAuB2F,MAAvB,EAA+B5D,MAA/B,GAAwC,IAAxC;AACA,cAAA,MAAI,CAACtB,WAAL,CAAiBsB,MAAjB,GAA0B,KAA1B;AACA,cAAA,MAAI,CAACrB,WAAL,CAAiBqB,MAAjB,GAA0B,KAA1B;AACA,cAAA,MAAI,CAACR,MAAL,GAAc8D,KAAd;AACA,cAAA,MAAI,CAACjF,QAAL,CAAcwB,MAAd,GAAuB,CAAC,MAAI,CAACL,MAAL,GAAc,GAAf,EAAoBmB,OAApB,CAA4B,CAA5B,CAAvB;;AACA,cAAA,MAAI,CAACF,YAAL,CAAkB,CAAlB;AACH,aAVD,EAUG,GAVH;AAWH;AACJ,SAhBD,EAgBG,GAhBH,EAgBQkD,WAAW,CAACG,MAAZ,GAAqB,CAhB7B;AAiBH,OAnBD,MAmBO;AACH,QAAA,MAAI,CAACD,YAAL,CAAkB,YAAM;AACpB,cAAIV,OAAO,GAAG,MAAI,CAACnB,iBAAL,CAAuB2B,WAAW,CAAC,CAAD,CAAlC,CAAd;;AACA,UAAA,MAAI,CAACN,QAAL,CAAc,QAAd,EAAwBM,WAAW,CAAC,CAAD,CAAnC;;AACA,UAAA,MAAI,CAACnF,cAAL,CAAoBuF,QAApB,CAA6B,CAA7B,EAAgC3E,YAAhC,CAA6CnC,EAAE,CAACkB,MAAhD,EAAwD2D,WAAxD,GAAsE,MAAI,CAACxD,SAAL,CAAeyD,cAAf,CAA8BoB,OAA9B,CAAtE;AACA,UAAA,MAAI,CAAClF,iBAAL,CAAuB2F,MAAvB,EAA+B5D,MAA/B,GAAwC,IAAxC;AACA,UAAA,MAAI,CAACtB,WAAL,CAAiBsB,MAAjB,GAA0B,KAA1B;AACA,UAAA,MAAI,CAACrB,WAAL,CAAiBqB,MAAjB,GAA0B,KAA1B;AACA,UAAA,MAAI,CAACR,MAAL,GAAc8D,KAAd;AACA,UAAA,MAAI,CAACjF,QAAL,CAAcwB,MAAd,GAAuB,CAAC,MAAI,CAACL,MAAL,GAAc,GAAf,EAAoBmB,OAApB,CAA4B,CAA5B,CAAvB;;AACA,UAAA,MAAI,CAACF,YAAL,CAAkB,CAAlB;AACH,SAVD,EAUG,GAVH;AAWH;AACJ,KAlCD,EAkCG,CAlCH;AAmCH;AAxRI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        myChipsLbl: cc.Label,\n        chipPbList: [cc.Prefab], // 1，19，50，100，500，保险\n        coinNode: cc.Node,\n        betTip: cc.Node,\n        chipsPool: cc.Node,\n        chipsNode: cc.Node,\n        btnList: [cc.Button], //要 不要 保险 翻倍 继续游戏\n        helpBd: cc.Node,\n        gameResultPicList: [cc.Node], // 赢 平 输\n        userHead: cc.Sprite,\n        userName: cc.Label,\n        userCoin: cc.Label,\n        cardAtlas: cc.SpriteAtlas,\n        bankerCardNode: cc.Node,\n        playerCardNode: cc.Node,\n        bankerArrow: cc.Node,\n        playerArrow: cc.Node,\n        playerScoreLbl: cc.Label,\n        bankerScoreLbl: cc.Label,\n\n    },\n\n    onLoad() {\n        this.playerInfo = require(\"PlayerInfo\").getInstant;\n        this.net = this.node.getComponent('blackJackNetwork');\n        this.audio = this.node.getComponent('blackJackAudio');\n\n        //初始化数值\n        this.bet = 100;\n        this.lastChips = 0;\n        this.myCoin = 0;\n        this.playerScore = [0, 0];\n        this.bankerScore = [0, 0];\n    },\n\n    start() {\n        this.clearGame();\n    },\n\n    clearGame() {\n        this.playerScore = [0, 0];\n        this.bankerScore = [0, 0];\n        this.playerScoreLbl.string = '0';\n        this.bankerScoreLbl.string = '0';\n        this.myChipsLbl.string = '0.00';\n        this.chipsPool.removeAllChildren();\n        for (let i in this.btnList) {\n            this.btnList[i].node.active = false;\n        }\n        this.chipsNode.active = true;\n        for (let i in this.gameResultPicList) {\n            this.gameResultPicList[i].active = false;\n        }\n        this.bankerCardNode.removeAllChildren();\n        this.playerCardNode.removeAllChildren();\n        this.coinNode.removeAllChildren();\n        this.betTip.active = true;\n        this.bankerArrow.active = false;\n        this.playerArrow.active = false;\n    },\n\n    onClick(ev, args) {\n        if (args == 'exitGame') {\n            this.net.socket.disconnect();\n            cc.director.loadScene(\"LobbyMain\");\n        } else if (args == 'onBet') {\n            if (this.myCoin >= this.bet && this.chipsNode.active) {\n                this.betTip.active = false;\n                this.chipsNode.active = false;\n                this.net.socket.emit('lottery', this.bet);\n            }\n        } else if (args == 'help') {\n            this.helpBd.active = true;\n        } else if (args == 'closeHelp') {\n            this.helpBd.active = false;\n        } else if (args == 'hit') {\n            this.playerStatus(-1);\n            //sendCard  0 stand  1 hit 2double\n            this.net.socket.emit('sendCard', 1);\n        } else if (args == 'stand') {\n            this.playerStatus(-1);\n            //sendCard  0 stand  1 hit 2double\n            this.net.socket.emit('sendCard', 0);\n        } else if (args == 'double') {\n            this.playerStatus(-1);\n            //sendCard  0 stand  1 hit 2double\n            this.net.socket.emit('sendCard', 2);\n        } else if (args == 'insurance') {\n            this.playerStatus(-1);\n            this.net.socket.emit('buySafe');\n        } else if (args == 'reGame') {\n            this.clearGame();\n        }\n    },\n\n    betCallBack() {\n        this.myCoin -= this.bet;\n        this.lastChips = this.bet;\n        this.userCoin.string = (this.myCoin / 100).toFixed(2);\n        this.myChipsLbl.string = (this.lastChips / 100).toFixed(2);\n        this.rollCoin();\n    },\n\n    rollCoin(insuranceBool) {\n        let coinJson = {\n            100: 0,\n            1000: 1,\n            5000: 2,\n            10000: 3,\n            50000: 4,\n        }\n        let coin = cc.instantiate(this.chipPbList[!!insuranceBool ? 5 : coinJson[this.bet]]);\n        this.coinNode.addChild(coin);\n        coin.position = cc.v2(400, -600);\n        coin.runAction(cc.moveTo(0.3, cc.v2(Math.random() * 100 - 50, Math.random() * 100 - 50)));\n    },\n\n    onToggle(ev, args) {\n        this.bet = parseInt(args) * 100;\n    },\n\n    startBet() {\n        this.chipsNode.active = true;\n        this.betTip.active = true;\n    },\n\n    getCard() {\n        let node = new cc.Node();\n        this.node.addChild(node);\n        let spr = node.addComponent(cc.Sprite);\n        spr.spriteFrame = this.cardAtlas.getSpriteFrame('bg_back');\n        return node;\n    },\n\n    changeFlowerToStr(flower) {\n        let str = 'bg_back';\n        if (!!flower) {\n            let u = parseInt(flower / 16 / 16);\n            let v = flower % 16;\n            str = `${v}_${u >= 10 ? u : '0' + u}`;\n        }\n        return str;\n    },\n\n    firstDeal(...args) {\n        let curIndex = 0;\n        this.schedule(() => {\n            if (curIndex <= 1) {\n                this.deal('banker', args[curIndex]);\n            } else {\n                this.deal('', args[curIndex]);\n            }\n            curIndex++;\n            if (curIndex == 4) {\n                this.playerArrow.active = true;\n            }\n        }, 0.3, 3);\n    },\n\n    deal(who, flower) {\n        let defaultPos = cc.v2(515, 386);\n        let card = this.getCard();\n        card.position = defaultPos;\n        card.rotation = -76;\n        let whoNode = this.playerCardNode;\n        let whoPos = cc.v2(0, -160);\n        if (who == 'banker') {\n            whoNode = this.bankerCardNode;\n            whoPos = cc.v2(0, 240);\n        }\n\n        //出牌\n        card.runAction(cc.sequence(cc.spawn(cc.moveTo(0.3, whoPos), cc.rotateTo(0.3, 0)), cc.callFunc(() => {\n            let sprName = this.changeFlowerToStr(flower);\n            card.getComponent(cc.Sprite).spriteFrame = this.cardAtlas.getSpriteFrame(sprName);\n            card.parent = whoNode;\n            card.position = cc.v2(0, 0);\n            this.setCount(who, flower);\n        })));\n    },\n\n    setCount(who, flower) {\n        //计算分数\n        let score = who == 'banker' ? this.bankerScore : this.playerScore;\n        let scoreLlb = who == 'banker' ? this.bankerScoreLbl : this.playerScoreLbl;\n        let cardScore = parseInt(flower / 16 / 16);\n        cardScore = cardScore >= 10 ? 10 : cardScore;\n        if (cardScore == 1) {\n            score[0] += 1;\n            score[1] += 11;\n        } else {\n            score[0] += cardScore;\n            score[1] += cardScore;\n        }\n        if (score[0] == score[1]) {\n            scoreLlb.string = score[0];\n        } else {\n            if (score[0] <= 21 && score[1] <= 21) {\n                if (score[0] == 21 || score[1] == 21) {\n                    scoreLlb.string = '21';\n                } else {\n                    scoreLlb.string = score[0] + '/' + score[1];\n                }\n            } else if (score[0] > 21 && score[1] > 21) {\n                scoreLlb.string = score[0] >= score[1] ? score[1] : score[0];\n            } else {\n                scoreLlb.string = score[0] <= 21 ? score[0] : score[1];\n            }\n        }\n    },\n\n    playerStatus(index) {\n        for (let i in this.btnList) {\n            this.btnList[i].node.active = false;\n        }\n        if (index == 1) {\n            //保险+首次是否要牌\n            this.btnList[0].node.active = true;\n            this.btnList[1].node.active = true;\n            this.btnList[2].node.active = true;\n            this.btnList[3].node.active = true;\n        } else if (index == 2) {\n            //不用买保险+首次是否要牌\n            this.btnList[0].node.active = true;\n            this.btnList[1].node.active = true;\n            this.btnList[3].node.active = true;\n        } else if (index == 3) {\n            //再次次是否要牌\n            this.btnList[0].node.active = true;\n            this.btnList[1].node.active = true;\n        } else if (index == 4) {\n            this.btnList[4].node.active = true;\n        }\n    },\n\n    overAction(bankerCards, whoWin, score) {\n        //whoWin 0 玩家赢 1庄赢 2平\n        for (let i in this.btnList) {\n            this.btnList[i].node.active = false;\n        }\n        this.playerArrow.active = false;\n        this.scheduleOnce(() => {\n            this.bankerArrow.active = true;\n            if (bankerCards.length > 2) {\n                let index = 2;\n                this.schedule(() => {\n                    this.deal('banker', bankerCards[index]);\n                    index++;\n                    if (index == bankerCards.length) {\n                        this.scheduleOnce(() => {\n                            let sprName = this.changeFlowerToStr(bankerCards[1]);\n                            this.setCount('banker', bankerCards[1]);\n                            this.bankerCardNode.children[1].getComponent(cc.Sprite).spriteFrame = this.cardAtlas.getSpriteFrame(sprName);\n                            this.gameResultPicList[whoWin].active = true;\n                            this.bankerArrow.active = false;\n                            this.playerArrow.active = false;\n                            this.myCoin = score;\n                            this.userCoin.string = (this.myCoin / 100).toFixed(2);\n                            this.playerStatus(4);\n                        }, 0.5);\n                    }\n                }, 0.3, bankerCards.length - 3);\n            } else {\n                this.scheduleOnce(() => {\n                    let sprName = this.changeFlowerToStr(bankerCards[1]);\n                    this.setCount('banker', bankerCards[1]);\n                    this.bankerCardNode.children[1].getComponent(cc.Sprite).spriteFrame = this.cardAtlas.getSpriteFrame(sprName);\n                    this.gameResultPicList[whoWin].active = true;\n                    this.bankerArrow.active = false;\n                    this.playerArrow.active = false;\n                    this.myCoin = score;\n                    this.userCoin.string = (this.myCoin / 100).toFixed(2);\n                    this.playerStatus(4);\n                }, 0.5);\n            }\n        }, 1);\n    },\n});"]}