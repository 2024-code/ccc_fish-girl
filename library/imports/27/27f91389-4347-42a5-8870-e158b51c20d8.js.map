{"version":3,"sources":["assets\\Texture\\game_saima\\sm_Network.js"],"names":["cc","Class","Component","onLoad","playerInfo","require","getInstant","gameMain","node","getComponent","sign","gameSign","userId","playerId","port","time_betClose","time_openPrice","time_oneGame","sys","isNative","socket","SocketIO","connect","Lhjconfig","Server_IP","registEvent","on","ret","log","emit","JSON","stringify","userid","gametype","result","changeResultJSON_Function","resultid","userName","Obj","nickname","userCoin","score","exchangeRate","headUrl","headimgurl","showInfo","msg","startBets","obj","ResultCode","getResult","index","i","otherOdd","j","game_record","length","gameRecord","closeBets","parse"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    onLoad() {\r\n        this.playerInfo = require(\"PlayerInfo\").getInstant;\r\n        this.gameMain = this.node.getComponent('saima');\r\n        this.sign = this.playerInfo.gameSign;\r\n        this.userId = this.playerInfo.playerId;\r\n        this.port = ':16006';\r\n        this.time_betClose = 0;\r\n        this.time_openPrice = 0;\r\n        this.time_oneGame = 0;\r\n        //连接网络\r\n        if (cc.sys.isNative) {\r\n            this.socket = SocketIO.connect(Lhjconfig.Server_IP + this.port);\r\n        } else {\r\n            let socket = require(\"socket-io\");\r\n            this.socket = socket(Lhjconfig.Server_IP + this.port);\r\n        }\r\n        this.registEvent();\r\n    },\r\n    //BetPool\r\n    registEvent() {\r\n        this.socket.on(\"connected\", ret => {\r\n            cc.log('connected:' + ret);\r\n            if (ret) {\r\n                this.socket.emit(\"LoginGame\", JSON.stringify({\r\n                    userid: this.userId, //用户ID\r\n                    gametype: 11, //游戏类型\r\n                    sign: this.sign //签名\r\n                }));\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"loginGameResult\", ret => {\r\n            let result = this.changeResultJSON_Function(ret);\r\n            cc.log('游戏登陆成功=======================' + JSON.stringify(result));\r\n            if (result.resultid) { //游戏登录成功\r\n                this.userName = result.Obj.nickname;\r\n                this.userCoin = result.Obj.score / this.playerInfo.exchangeRate;\r\n                this.headUrl = result.Obj.headimgurl;\r\n                this.time_betClose = result.Obj.time_betClose;\r\n                this.time_openPrice = result.Obj.time_openPrice;\r\n                this.time_oneGame = result.Obj.time_oneGame;\r\n                this.gameMain.showInfo(result.Obj);\r\n                this.socket.emit('getGameRecord');\r\n            } else {\r\n                cc.log(result.msg);\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"BetStart\", ret => {\r\n            let result = this.changeResultJSON_Function(ret);\r\n            cc.log('BetStart:', result);\r\n            this.socket.emit('getGameRecord');\r\n            this.gameMain.startBets(result.obj);\r\n        });\r\n\r\n        this.socket.on(\"OpenWinResult\", ret => {\r\n            cc.log('OpenWinResult:', ret);\r\n            let result = this.changeResultJSON_Function(ret);\r\n            if (result.ResultCode) {\r\n                this.userCoin = result.score / this.playerInfo.exchangeRate;\r\n                this.gameMain.getResult(result);\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"lotteryResult\", ret => {\r\n            cc.log('lotteryResult:', ret);\r\n        });\r\n\r\n        this.socket.on(\"BetPool\", ret => {\r\n            let result = this.changeResultJSON_Function(ret);\r\n            // console.log('BetPool' + JSON.stringify(result));\r\n            let index = 0;\r\n            for (let i in this.gameMain.otherOdd) {\r\n                for (let j in this.gameMain.otherOdd[i]) {\r\n                    this.gameMain.otherOdd[i][j] = result.result[index];\r\n                    index++;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"getGameRecordResult\", ret => {\r\n            cc.log('getGameRecordResult:', ret);\r\n            let result = this.changeResultJSON_Function(ret);\r\n            if (result.game_record.length > 0) {\r\n                this.gameMain.gameRecord = result.game_record;\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"BetStop\", ret => {\r\n            cc.log('BetStop:', ret);\r\n            this.gameMain.closeBets();\r\n        });\r\n    },\r\n\r\n    changeResultJSON_Function(ret) {\r\n        if (cc.sys.isNative) {\r\n            return JSON.parse(ret);\r\n        }\r\n        return ret;\r\n    },\r\n});"]}