{"version":3,"sources":["assets\\Script\\Fish_haiwang2\\Fishhaiwang2.js"],"names":["cc","Class","Component","properties","fishInit","fishMain","fishID","fishType","offset","v2","activity","dead","onDie","anim","node","getComponent","Animation","play","_clips","_name","BoxCollider","enabled","scheduleOnce","removeFromParent","update","last_pos","undefined","position","x","y","startPos","endPos","dirVec","sub","comVec","radian","signAngle","degree","Math","floor","misc","radiansToDegrees","angle","rot_setted","scaleX","getChildByName","executeMove","pos_arr","i","pathIndex","pathArr","length","push","add","path","find","destroy","t","waveMoveTime","fishInfo","fishLineup","moveTime","bezierTo","finish","callFunc","runAction","sequence","move","moveTo"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    fishInit() {\r\n        this.fishMain = null;\r\n        this.fishID = 0;\r\n        this.fishType = 0;\r\n        this.offset = cc.v2(0, 0);\r\n        this.activity = false;\r\n        this.dead = false;\r\n    },\r\n\r\n    onDie() {\r\n        let anim = this.node.getComponent(cc.Animation);\r\n        anim.play(anim._clips[1]._name);\r\n        this.node.getComponent(cc.BoxCollider).enabled = false;\r\n        this.scheduleOnce(() => {\r\n            this.node.removeFromParent();\r\n        }, 1);\r\n    },\r\n\r\n    update() {\r\n        if (this.last_pos == undefined) {\r\n            this.last_pos = this.node.position;\r\n            return;\r\n        }\r\n\r\n        if (this.last_pos.x == this.node.position.x && this.last_pos.y == this.node.position.y) {\r\n            return;\r\n        }\r\n\r\n        var startPos = this.last_pos;\r\n        var endPos = this.node.position;\r\n\r\n        let dirVec = endPos.sub(startPos);//获得从startPos指向endPos的方向向量\r\n        let comVec = new cc.v2(0, 1);//计算夹角的参考方向，这里选择x轴正方向\r\n        let radian = cc.v2(dirVec).signAngle(comVec);//获得带方向的夹角弧度值(参考方向顺时针为正值，逆时针为负值)\r\n        let degree = Math.floor(cc.misc.radiansToDegrees(radian));\r\n\r\n        // this.node.rotation = degree;\r\n        this.node.angle = -degree;\r\n\r\n        if (!this.rot_setted) {\r\n            this.rot_setted = true;\r\n            if (degree > 180 || (degree > -180 && degree < 0)) {\r\n                this.node.scaleX = -1;\r\n                this.node.getChildByName(\"tip\") && (this.node.getChildByName(\"tip\").scaleX = -1);\r\n            }\r\n        }\r\n\r\n        this.last_pos = this.node.position;\r\n    },\r\n    // BirdCreat_function: function(e, t, i, n, o, a, s, c, r) {\r\n    //     this.birdID = e,\r\n    //     this.birdType = t,\r\n    //     this.node.opacity = 255,\r\n    //     this.node.scale = 1.8,\r\n    //     this.positionArray = null,\r\n    //     26 === t ? r += \"+\": r = \"\",\r\n    //     this.node.getChildByName(\"id\").getComponent(\"cc.Label\").string = r,\r\n    //     this.LoadPath_Function(i, n, o, a, s, c)\r\n    // },\r\n    // LoadPath_Function: function(e, t, i, n, o, a) {\r\n    //     var s = cc.p(0, 0),\r\n    //     c = 0;\r\n    //     if (this.positionArray = new Array(i[e].length), t < 2) for (c = 0; c < this.positionArray.length; ++c) s = cc.p(0, 0),\r\n    //     s.x = i[e][c][0] * a * 1.1 - n.x,\r\n    //     s.y = i[e][c][1] * a * 1.1 - n.y,\r\n    //     this.positionArray[c] = s;\r\n    //     else for (c = 0; c < this.positionArray.length; ++c) s = cc.p(0, 0),\r\n    //     s.x = i[e][c][0] * a * 1.1 - n.x,\r\n    //     s.y = i[e][c][1] * a * 1.1 * -1 - n.y,\r\n    //     this.positionArray[c] = s;\r\n    //     this.BirdRun_Function(o)\r\n    // },\r\n    // BirdRun_Function: function(e) {\r\n    //     this.node.setPosition(this.positionArray[0]),\r\n    //     this.lastP = cc.p(0, 0),\r\n    //     this.currentP = cc.p(0, 0);\r\n    //     var t;\r\n    //     t = e === !0 ? cc.cardinalSplineTo(this.node.parent.parent.getComponent(\"GameMain\").fishWaveMoveTime, this.positionArray, -.5) : cc.cardinalSplineTo(this.node.parent.parent.getComponent(\"GameMain\").moveTime[this.birdType], this.positionArray, -.5);\r\n    //     var i = cc.sequence(t, cc.callFunc(function() {\r\n    //         this.deaded = !0,\r\n    //         this.dying = !1,\r\n    //         this.activity = !1,\r\n    //         this.existence ? (this.turn.destroy(), this.existence = !1) : this.Halo ? (this.PHalo.destroy(), this.Halo = !1) : this.TQ ? (this.toadquan.destroy(), this.TQ = !1) : this.PL && (this.p_Label.destroy(), this.PL = !1, this.node.parent.parent.getComponent(\"GameMain\").pen = null);\r\n    //         for (var e = 0; e < this.node.parent.parent.getComponent(\"GameMain\").birdArray.length; e++) this.node.parent.parent.getComponent(\"GameMain\").birdArray[e] == this.node && this.node.parent.parent.getComponent(\"GameMain\").birdArray.splice(e, 1);\r\n    //         this.node.parent.parent.getComponent(\"GameMain\").FishPool.put(this.node)\r\n    //     },\r\n    //     this));\r\n    //     this.node.runAction(i),\r\n    //     18 === this.birdType || 19 === this.birdType || 20 === this.birdType ? (this.turn = cc.instantiate(this.turntable), this.node.parent.addChild(this.turn, -1), this.turn.setPosition(this.node.getPosition()), this.existence = !0) : 15 === this.birdType || 16 === this.birdType || 17 === this.birdType ? (this.PHalo = cc.instantiate(this.Pb_Halo), this.node.parent.addChild(this.PHalo, -1), this.PHalo.setPosition(this.node.getPosition()), this.Halo = !0) : 23 === this.birdType ? (this.p_Label = cc.instantiate(this.pen_Label), this.node.addChild(this.p_Label), this.PL = !0, this.p_Label.getComponent(\"cc.Label\").string = this.node.parent.parent.getComponent(\"GameMain\").pool) : 24 === this.birdType && (this.toadquan = cc.instantiate(this.pb_toadquan), this.node.parent.addChild(this.toadquan, -1), this.toadquan.setPosition(this.node.getPosition()), this.TQ = !0),\r\n    //     this.getComponent(\"cc.Animation\").play(\"move\" + this.birdType),\r\n    //     this.deaded = !1,\r\n    //     this.dying = !1,\r\n    //     this.activity = !0\r\n    // },\r\n    // Rotation_function: function() {\r\n    //     this.currentP = this.node.getPosition();\r\n    //     var e = this.currentP.sub(this.lastP),\r\n    //     t = cc.pToAngle(e) / Math.PI * 180;\r\n    //     if (this.node.rotation = -t, this.lastP = this.currentP, 18 === this.birdType || 19 === this.birdType || 20 === this.birdType) {\r\n    //         var i = this.node.getPosition().x + 10 * Math.cos(cc.pToAngle(e)),\r\n    //         n = this.node.getPosition().y + 10 * Math.sin(cc.pToAngle(e));\r\n    //         this.turn.setPosition(i, n)\r\n    //     } else 15 === this.birdType || 16 === this.birdType || 17 === this.birdType ? this.PHalo.setPosition(this.node.getPosition()) : 23 === this.birdType || 25 === this.birdType ? this.node.rotation = 0 : 24 === this.birdType ? this.toadquan.setPosition(this.node.getPosition()) : 26 === this.birdType && (this.node.rotation = 0)\r\n    // },\r\n    // CountDeadAnimationTimes_Function: function(e) {\r\n    //     this.deadAnimationTimes += e,\r\n    //     this.deadAnimationTimes > 1 && (this.node.stopAllActions(), this.playDeadAnimation = !1, this.dying = !1, this.deaded = !0, this.activity = !1, this.deadAnimationTimes = 0, this.existence ? (this.turn.destroy(), this.existence = !1) : this.Halo ? (this.PHalo.destroy(), this.Halo = !1) : this.TQ ? (this.toadquan.destroy(), this.TQ = !1) : this.PL && (this.p_Label.destroy(), this.PL = !1, this.node.parent.parent.getComponent(\"GameMain\").pen = null), this.node.getComponent(\"cc.Animation\").stop(), this.node.parent.parent.getComponent(\"GameMain\").FishPool.put(this.node))\r\n    // },\r\n    // playDeadAnimation_Function: function(e) {\r\n    //     this.node.getComponent(\"cc.Animation\").play(\"dead\" + this.birdType),\r\n    //     this.playDeadAnimation = !0\r\n    // },\r\n    // countColorChange_Function: function(e) {\r\n    //     this.time >= .3 ? (this.time = 0, this.colorChange = !1, this.node.color = cc.Color.WHITE, this.existence ? this.turn.color = cc.Color.WHITE: this.Halo ? this.PHalo.color = cc.Color.WHITE: this.TQ && (this.toadquan.color = cc.Color.WHITE)) : this.time += e\r\n    // },\r\n    // update: function(e) { ! this.activity || this.deaded || this.dying || this.Rotation_function(),\r\n    //     this.dying && this.CountDeadAnimationTimes_Function(e),\r\n    //     this.colorChange && this.countColorChange_Function(e)\r\n    // }\r\n\r\n    executeMove() {\r\n        var pos_arr = [];\r\n        for (var i = this.pathIndex; i < this.pathIndex + 3; i++) {\r\n            if (i >= this.pathArr.length) break;\r\n            pos_arr.push(cc.v2(this.pathArr[i][0], this.pathArr[i][1]).add(this.offset));\r\n        }\r\n\r\n        var path = cc.find('Canvas').getComponent(\"Fishhaiwang2Path\");\r\n\r\n\r\n        if (pos_arr.length == 0) {\r\n            this.node.destroy();\r\n        } else if (pos_arr.length == 3) {\r\n            var t = path.waveMoveTime;\r\n            if (this.fishInfo.fishLineup != 0) {\r\n                t = path.moveTime[this.fishInfo.fishType];\r\n            }\r\n            var bezierTo = cc.bezierTo(t, pos_arr);\r\n            var finish = cc.callFunc(this.executeMove, this);\r\n            this.node.runAction(cc.sequence(bezierTo, finish));\r\n            this.pathIndex += 3;\r\n        } else {\r\n\r\n            var t = path.waveMoveTime;\r\n            if (this.fishInfo.fishLineup != 0) {\r\n                t = path.moveTime[this.fishInfo.fishType];\r\n            }\r\n            var move = cc.moveTo(t / 3, pos_arr[0]);\r\n            var finish = cc.callFunc(this.executeMove, this);\r\n            this.node.runAction(cc.sequence(move, finish));\r\n            this.pathIndex++;\r\n        }\r\n    },\r\n});"]}